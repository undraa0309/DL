# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12n3Ufo-zXR3RtGdlmvaapUoYq9tpgXod
"""

import torch.nn as nn
import torch.nn.functional as F

class LeNet5(nn.Module):
    def __init__(self):
        super(LeNet5, self).__init__()
        self.conv1 = nn.Conv2d(1, 6, 5)  # 입력 채널 1, 출력 채널 6, 커널 크기 5
        self.pool = nn.MaxPool2d(2, 2)   # 풀링 크기 2x2
        self.conv2 = nn.Conv2d(6, 16, 5) # 입력 채널 6, 출력 채널 16, 커널 크기 5
        self.fc1 = nn.Linear(16 * 4 * 4, 120)  # 첫 번째 완전 연결 레이어
        self.fc2 = nn.Linear(120, 84)    # 두 번째 완전 연결 레이어
        self.fc3 = nn.Linear(84, 10)     # 출력 레이어

    def forward(self, x):
        x = self.pool(F.relu(self.conv1(x)))
        x = self.pool(F.relu(self.conv2(x)))
        x = x.view(-1, 16 * 4 * 4)
        x = F.relu(self.fc1(x))
        x = F.relu(self.fc2(x))
        x = self.fc3(x)
        return x

class CustomMLP(nn.Module):
    def __init__(self):
        super(CustomMLP, self).__init__()
        self.fc1 = nn.Linear(28*28, 300)  # 입력 레이어, 28x28 이미지를 펼친 것
        self.fc2 = nn.Linear(300, 100)    # 중간 레이어
        self.fc3 = nn.Linear(100, 10)     # 출력 레이어

    def forward(self, x):
        x = x.view(-1, 28*28)  # 이미지를 1D 벡터로 펼침
        x = F.relu(self.fc1(x))
        x = F.relu(self.fc2(x))
        x = self.fc3(x)
        return x